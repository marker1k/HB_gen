<!DOCTYPE html>
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <link rel="stylesheet" href="codemirror.css">
  <script src="codemirror.js"></script>
  <script src="xml.js"></script>
  <script src="javascript.js"></script>
  <script src="css.js"></script>
  <script src="vbscript.js"></script>
  <script src="htmlmixed.js"></script>
  <script src="clipboard.js"></script>
  
  <title>Yandex HB Config Generator</title>
  <link rel="stylesheet" href="style.css">
  <script src="conf.js"></script>
</head>

<body>
  <div class="header">Header Bidding Config</div>
  <div id="mainError">ERROR</div>
  
  <div class="form">
    <div id="biddersMap">
      <h3>1. Bidders Map</h3>
      <p>Выберите из списка покупателя и укажите для него идентификатор рекламной кампании, созданной в вашем аккаунте ADFOX, для данного покупателя.</p>
      <div id="biddersMapInner"></div>
      <button id="addBiddersMapUiElement" onclick="biddersMap.addBiddersMapUiElement(this);">Добавить</button>
    </div>
    <br>
    <hr>
    
    <div id="adUnits">
      <h3>2. Ad Units</h3>
      <p>Для каждого рекламного места (контейнера) нажмите кнопку "Добавить покупателя" и укажите набор покупателей, участвующих в торгах за показ на этом месте с их placement id. </p>
      <div id="adUnitsInner"></div>
      <button id="addAdUnitsUiElement" onclick="AdUnits.addAdUnitsUiElement(this);">Добавить контейнер</button>
      </div>
    <br>
    <hr>
    
    <div id="timeOut">
      <h3>3. User Timeout</h3>
      <p>Время ожидания ответа от сервера покупателя, рекомендуемое время 500 мс (максимальное 3000 мс).</p>
      <input id="userTimeout" placeholder="500" value="500" oninput="timeoutInput.checkTimeout(this);">
    </div>
    <br>
    <hr>
    <button class="generate" onclick="" disabled="">Сгенерировать скрипт</button>

    <div class="" id="timeoutError">
      sdsdfsdf
    </div>


  </div>
  <div class="container">
    <div id="result">
      <h3>4. Result</h3>
      <div>
        <input type="checkbox" id="as" name="as" value="as"><label for="claws">Использовать <a style="cursor: pointer;    color: #04b;    text-decoration: none;" href="https://sites.help.adfox.ru/page/45/#async">асинхронный loader.js.</a></label>
      </div>
       <button class="generate" onclick="" id="generate" disabled="">Сгенерировать скрипт</button>
      
      <!--<button class="generate" id="generate" onclick="" disabled="">Генерация</button>-->
      <button class="copyToClipboard" onclick="main.showSuccess()">Копировать</button>
      <span class="error" id="generateError">Заполните все поля</span>
      <br>
      <form>
        <textarea id="result_textarea" disabled="disabled"></textarea>
      </form>
    </div>
  </div>
  <div id="timeoutError">ID контейнеров должны быть уникальными</div>
  <div id="sizesError">ID контейнеров должны быть уникальными</div>
  <div id="generateError">ID контейнеров должны быть уникальными</div>
  <div id="sameContainer">ID контейнеров должны быть уникальными</div>
  <div id="fillAdUnits">ID контейнеров должны быть уникальными</div>
  <div id="wrongLetters">ID контейнеров должны быть уникальными</div>
  <div id="emptyBidder">ID контейнеров должны быть уникальными</div>
  <div id="emptyPlacement">ID контейнеров должны быть уникальными</div>
  <script type="text/javascript">
    var editorSelector = '#result_textarea';
    new ClipboardJS('.copyToClipboard', {
      text: function(trigger) {
        return getCodeMirrorNative(editorSelector).getDoc().getValue();
      }
    });

    function getCodeMirrorNative(target) {
      var _target = target;
      if (typeof _target === 'string') {
        _target = document.querySelector(_target);
      }
      if (_target === null || !_target.tagName === undefined) {
        throw new Error('Element does not reference a CodeMirror instance.');
      }

      if (_target.className.indexOf('CodeMirror') > -1) {
        return _target.CodeMirror;
      }

      if (_target.tagName === 'TEXTAREA') {
        return _target.nextSibling.CodeMirror;
      }

      return null;
    };
    var generateButtons = document.getElementsByClassName("generate");
    for (var i = 0; i < generateButtons.length; i += 1) {
      generateButtons[i].addEventListener('click', function() {
        main.makeInstall();
      });
      generateButtons[i].disabled = true;
    }
  </script>



</body></html>